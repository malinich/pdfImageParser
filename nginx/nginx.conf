# user  nobody;
worker_processes  1;


#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

pid        /var/log/nginx.pid;


events {
    worker_connections  1024;
}


http {
include       mime.types;
index index.html
default_type  application/octet-stream;

#log_format  main  '$remote_addr - $remote_user [$time_local] $request '
#                  '"$status" $body_bytes_sent "$http_referer" '
#                  '"$http_user_agent" "$http_x_forwarded_for"';

#access_log  access.log  main;

sendfile        on;
#tcp_nopush     on;

#keepalive_timeout  0;
keepalive_timeout  65;

gzip  on;

upstream converter_server {
    server 127.0.0.1:3001;
}



server {
    listen       8000;
    server_name  localhost;

    #charset koi8-r;

# Allow file uploads max 50M for example
    client_max_body_size 50M;

    #access_log  logs/host.access.log  main;
    error_log  /var/log/error.log info;


    #POST URLn
    location /upload {
        # Pass altered request body to this location
        upload_pass @after_upload;

        # Store files to this directory
        upload_store /tmp;

        # Allow uploaded files to be read only by user
        upload_store_access user:rw group:rw all:rw;

        # Set specified fields in request body
        upload_set_form_field $upload_field_name.name "$upload_file_name";
        upload_set_form_field $upload_field_name.content_type "$upload_content_type";
        upload_set_form_field $upload_field_name.path "$upload_tmp_path";

        # Inform backend about hash and size of a file
        upload_aggregate_form_field "$upload_field_name.md5" "$upload_file_md5";
        upload_aggregate_form_field "$upload_field_name.size" "$upload_file_size";

        #upload_pass_form_field "some_hidden_field_i_care_about";

        upload_cleanup 400 404 499 500-505;
    }

    location /static {
        proxy_pass  http://converter_server;
    }

    location /media/ {
        alias /var/media/;
    }

    location /convsocket {
            proxy_pass http://converter_server;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header  X-Forwarded-For $remote_addr;
     }

    location / {
        proxy_pass      http://converter_server;
    }



    location @after_upload {
        proxy_pass   http://127.0.0.1:3000;
    }
}
}